#!/bin/bash

# Function to detect clipboard tool based on XDG environment variables
function detect_clipboard_tool() {
    local tools=(
        "xclip -selection clipboard -o -t TARGETS - | xclip -selection clipboard -o"    # Xclip
        "xsel --output --clipboard"                                                     # Xsel
        "pbpaste"                                                                        # macOS pbpaste
        "powershell.exe -Command Get-Clipboard"                                          # Windows PowerShell
        "cmd.exe /c clip"                                                                # Windows CMD
    )

    # Determine order of tools based on likelihood of presence
    if [[ "$XDG_SESSION_TYPE" == "wayland" ]]; then
        tools=( "${tools[@]:1:3}" "${tools[0]}" "${tools[4]}" )
    elif [[ "$XDG_SESSION_TYPE" == "x11" ]]; then
        tools=( "${tools[@]:0:2}" "${tools[3]}" "${tools[2]}" "${tools[4]}" )
    else
        tools=( "${tools[@]:3}" "${tools[@]:0:3}" )
    fi

    # Iterate over tools and return first one that works
    for tool in "${tools[@]}"; do
        if command -v "${tool%% *}" > /dev/null; then
            echo "$tool"
            return 0
        fi
    done

    # No tools found, exit with error
    echo "No clipboard tool detected." >&2
    exit 1
}

# Call the function to detect clipboard tool
clipboard_tool=$(detect_clipboard_tool)

# Test the clipboard tool by printing the clipboard content
$clipboard_tool
